【1】 用户基础表

     CREATE TABLE t_user_basic (
       id SERIAL PRIMARY KEY,
       loginId VARCHAR(20) NOT NULL,
       nickName VARCHAR(50) NOT NULL,
       pwd VARCHAR(20) NOT NULL,
       headImg VARCHAR(20) DEFAULT NULL,
       UNIQUE (loginId)
     );

     INSERT INTO t_user_basic(id, loginId, nickName, pwd, headImg) VALUES
       (1, 'u001', 'jim', 'ok', 'qf.png'),
       (2, 'u002', 'tom', 'ok', 'dy.png'),
       (3, 'u003', 'kate', 'ok', 'mrf.png'),
       (4, 'u004', 'lucy', 'ok', 'wyy.png'),
       (5, 'u005', '张三丰', 'ok', 'zl.png');

======================================================================

 【2】用户 和 它朋友的 表

--- user & his friend's list

    CREATE TABLE t_friend (
      id SERIAL PRIMARY KEY,
      uid INT DEFAULT NULL,
      fid INT DEFAULT NULL,
      FOREIGN KEY (fid) REFERENCES t_user_basic (id),
      FOREIGN KEY (uid) REFERENCES t_user_basic (id)
    );

    INSERT INTO t_friend(id,uid,fid)
    VALUES
    (1,1,2),(2,1,3),(3,1,4),(4,1,5),(5,2,3),(6,2,1),(7,2,4),(8,3,1),(9,3,2),(10,5,1);

 ======================================================================

【3】主人 对 他 自己文章的 其它人的回复 的回复

    CREATE TABLE t_host_reply (
      id SERIAL PRIMARY KEY,
      content VARCHAR(500) NOT NULL,
      hostReplyDate TIMESTAMP NOT NULL,
      author INT NOT NULL,
      reply INT NOT NULL,
      FOREIGN KEY (author) REFERENCES t_user_basic (id),
      FOREIGN KEY (reply) REFERENCES t_reply (id)
    );
当删除一篇日志的时候，这篇日志对应的回复，对应的主人回复 也都跟着 被删除
 ======================================================================

【4】回复列表

    CREATE TABLE t_reply (
      id SERIAL PRIMARY KEY,  //
      content VARCHAR(500) NOT NULL,
      replyDate TIMESTAMP NOT NULL,
      author INT NOT NULL,
      topic INT NOT NULL,    // t_topic (id)
      FOREIGN KEY (author) REFERENCES t_user_basic (id),
      FOREIGN KEY (topic) REFERENCES t_topic (id)
    );

    INSERT INTO t_reply(id, content, "replyDate", author, topic) VALUES
      (3, '回复', '2021-07-14 16:16:54'::timestamp, 2, 8),
      (4, '回复2222', '2021-07-14 16:17:11'::timestamp, 3, 8),
      (5, '这里是第三个回复', '2021-07-14 16:30:49'::timestamp, 1, 8);

 ======================================================================

【5】

    CREATE TABLE t_topic (
      id SERIAL PRIMARY KEY,
      title VARCHAR(100) NOT NULL,
      content VARCHAR(500) NOT NULL,
      topicDate TIMESTAMP NOT NULL,
      author INT NOT NULL,
      FOREIGN KEY (author) REFERENCES t_user_basic (id)
    );

    INSERT INTO
    t_topic(id, title, content, topicDate, author)
    VALUES
      (3, '我的空间开通了，先做自我介绍！', '大家好，我是铁锤妹妹！', '2021-06-18 11:25:30'::timestamp, 2),
      (8, '我的空间', '我的空间', '2021-07-14 16:16:40'::timestamp, 1);



 ======================================================================

    CREATE TABLE t_user_detail (
      id INT NOT NULL,
      realName VARCHAR(20) DEFAULT NULL,
      tel VARCHAR(11) DEFAULT NULL,
      email VARCHAR(30) DEFAULT NULL,
      birth TIMESTAMP DEFAULT NULL,
      star VARCHAR(10) DEFAULT NULL,
      PRIMARY KEY (id),
      FOREIGN KEY (id) REFERENCES t_user_basic (id)
    );